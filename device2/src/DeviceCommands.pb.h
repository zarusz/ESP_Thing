/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.5 at Thu Apr 07 23:43:53 2016. */

#ifndef PB_DEVICECOMMANDS_PB_H_INCLUDED
#define PB_DEVICECOMMANDS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CommandAckResponse {
    int32_t message_id;
/* @@protoc_insertion_point(struct:CommandAckResponse) */
} CommandAckResponse;

typedef struct _DeviceIRCommand {
    int32_t message_id;
    int32_t port;
    pb_callback_t value;
/* @@protoc_insertion_point(struct:DeviceIRCommand) */
} DeviceIRCommand;

typedef struct _DeviceMovementDetectedEvent {
    pb_callback_t device;
    int32_t port;
/* @@protoc_insertion_point(struct:DeviceMovementDetectedEvent) */
} DeviceMovementDetectedEvent;

typedef struct _DeviceSwitchCommand {
    int32_t message_id;
    int32_t port;
    bool on;
/* @@protoc_insertion_point(struct:DeviceSwitchCommand) */
} DeviceSwitchCommand;

typedef struct _DeviceTemperatureMeasuredEvent {
    pb_callback_t device;
    int32_t port;
    int32_t value;
/* @@protoc_insertion_point(struct:DeviceTemperatureMeasuredEvent) */
} DeviceTemperatureMeasuredEvent;

typedef struct _DeviceMessage {
    bool has_switch;
    DeviceSwitchCommand switch;
    bool has_ir;
    DeviceIRCommand ir;
    bool has_ack;
    CommandAckResponse ack;
    bool has_temperatureMeasure;
    DeviceTemperatureMeasuredEvent temperatureMeasure;
    bool has_movementDetection;
    DeviceMovementDetectedEvent movementDetection;
/* @@protoc_insertion_point(struct:DeviceMessage) */
} DeviceMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define DeviceSwitchCommand_init_default         {0, 0, 0}
#define DeviceIRCommand_init_default             {0, 0, {{NULL}, NULL}}
#define CommandAckResponse_init_default          {0}
#define DeviceTemperatureMeasuredEvent_init_default {{{NULL}, NULL}, 0, 0}
#define DeviceMovementDetectedEvent_init_default {{{NULL}, NULL}, 0}
#define DeviceMessage_init_default               {false, DeviceSwitchCommand_init_default, false, DeviceIRCommand_init_default, false, CommandAckResponse_init_default, false, DeviceTemperatureMeasuredEvent_init_default, false, DeviceMovementDetectedEvent_init_default}
#define DeviceSwitchCommand_init_zero            {0, 0, 0}
#define DeviceIRCommand_init_zero                {0, 0, {{NULL}, NULL}}
#define CommandAckResponse_init_zero             {0}
#define DeviceTemperatureMeasuredEvent_init_zero {{{NULL}, NULL}, 0, 0}
#define DeviceMovementDetectedEvent_init_zero    {{{NULL}, NULL}, 0}
#define DeviceMessage_init_zero                  {false, DeviceSwitchCommand_init_zero, false, DeviceIRCommand_init_zero, false, CommandAckResponse_init_zero, false, DeviceTemperatureMeasuredEvent_init_zero, false, DeviceMovementDetectedEvent_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define CommandAckResponse_message_id_tag        1
#define DeviceIRCommand_message_id_tag           1
#define DeviceIRCommand_port_tag                 2
#define DeviceIRCommand_value_tag                3
#define DeviceMovementDetectedEvent_device_tag   1
#define DeviceMovementDetectedEvent_port_tag     2
#define DeviceSwitchCommand_message_id_tag       1
#define DeviceSwitchCommand_port_tag             2
#define DeviceSwitchCommand_on_tag               3
#define DeviceTemperatureMeasuredEvent_device_tag 1
#define DeviceTemperatureMeasuredEvent_port_tag  2
#define DeviceTemperatureMeasuredEvent_value_tag 3
#define DeviceMessage_switch_tag                 1
#define DeviceMessage_ir_tag                     2
#define DeviceMessage_ack_tag                    32
#define DeviceMessage_temperatureMeasure_tag     64
#define DeviceMessage_movementDetection_tag      65

/* Struct field encoding specification for nanopb */
extern const pb_field_t DeviceSwitchCommand_fields[4];
extern const pb_field_t DeviceIRCommand_fields[4];
extern const pb_field_t CommandAckResponse_fields[2];
extern const pb_field_t DeviceTemperatureMeasuredEvent_fields[4];
extern const pb_field_t DeviceMovementDetectedEvent_fields[3];
extern const pb_field_t DeviceMessage_fields[6];

/* Maximum encoded size of messages (where known) */
#define DeviceSwitchCommand_size                 24
#define CommandAckResponse_size                  11
#define DeviceMessage_size                       (60 + DeviceIRCommand_size + DeviceTemperatureMeasuredEvent_size + DeviceMovementDetectedEvent_size)

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define DEVICECOMMANDS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
